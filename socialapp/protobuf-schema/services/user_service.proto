/*
  Socialapp

  Socialapp is a generic social network.

  The version of the OpenAPI document: 1.0.0

  Contact: ignacio.gomez.arboleda@gmail.com

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.userservice;

import "google/protobuf/empty.proto";
import public "models/change_password_request.proto";
import public "models/comment.proto";
import public "models/create_user_request.proto";
import public "models/error.proto";
import public "models/reset_password_request.proto";
import public "models/role.proto";
import public "models/user.proto";

service UserService {
  rpc ChangePassword (ChangePasswordRequest) returns (User);

  rpc CreateUser (CreateUserRequest) returns (User);

  rpc DeleteUser (DeleteUserRequest) returns (User);

  rpc FollowUser (FollowUserRequest) returns (google.protobuf.Empty);

  rpc GetFollowingUsers (GetFollowingUsersRequest) returns (GetFollowingUsersResponse);

  rpc GetRolesForUser (GetRolesForUserRequest) returns (GetRolesForUserResponse);

  rpc GetUserByUsername (GetUserByUsernameRequest) returns (User);

  rpc GetUserComments (GetUserCommentsRequest) returns (GetUserCommentsResponse);

  rpc GetUserFollowers (GetUserFollowersRequest) returns (GetUserFollowersResponse);

  rpc ListUsers (ListUsersRequest) returns (ListUsersResponse);

  rpc ResetPassword (ResetPasswordRequest) returns (User);

  rpc UnfollowUser (UnfollowUserRequest) returns (google.protobuf.Empty);

  rpc UpdateRolesForUser (UpdateRolesForUserRequest) returns (UpdateRolesForUserResponse);

  rpc UpdateUser (UpdateUserRequest) returns (User);

}

message ChangePasswordRequest {
  // Change password request
  ChangePasswordRequest changePasswordRequest = 1;

}

message CreateUserRequest {
  // Create a new user
  CreateUserRequest createUserRequest = 1;

}

message DeleteUserRequest {
  // username of the user
  string username = 1;

}

message FollowUserRequest {
  // username of the user
  string followedUsername = 1;
  // username of the follower
  string followerUsername = 2;

}

message GetFollowingUsersRequest {
  // username of the user
  string username = 1;

}

message GetFollowingUsersResponse {
  repeated User data = 1;
}

message GetRolesForUserRequest {
  // username of the user
  string username = 1;

}

message GetRolesForUserResponse {
  repeated Role data = 1;
}

message GetUserByUsernameRequest {
  // username of the user
  string username = 1;

}

message GetUserCommentsRequest {
  // username of the user
  string username = 1;
  // How many items to return at one time (max 100)
  int32 limit = 2;
  // The number of items to skip before starting to collect the result set
  int32 offset = 3;

}

message GetUserCommentsResponse {
  repeated Comment data = 1;
}

message GetUserFollowersRequest {
  // username of the user
  string username = 1;

}

message GetUserFollowersResponse {
  repeated User data = 1;
}

message ListUsersRequest {
  // Maximum number of users to return
  int32 limit = 1;
  // Pagination offset
  int32 offset = 2;

}

message ListUsersResponse {
  repeated User data = 1;
}

message ResetPasswordRequest {
  // Reset password
  ResetPasswordRequest resetPasswordRequest = 1;

}

message UnfollowUserRequest {
  // username of the user
  string followedUsername = 1;
  // username of the follower
  string followerUsername = 2;

}

message UpdateRolesForUserRequest {
  // username of the user
  string username = 1;
  // Update all roles for a user
  repeated string requestBody = 2;

}

message UpdateRolesForUserResponse {
  repeated Role data = 1;
}

message UpdateUserRequest {
  // username of the user
  string username = 1;
  // Update a user
  User user = 2;

}

option go_package = "./services";
