version: "3.7"

networks:
  elk:
    name: docker-elk_elk

volumes:
  prometheus_data: {}
  grafana_data: {}
  db_data: {}
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  # phlare_data: {}

services:
  database:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: socialapp
    volumes:
      - ./db/setup:/docker-entrypoint-initdb.d
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:51000"
        tag: "database"

  grafana:
    image: grafana/grafana
    user: "472"
    ports:
      - 3005:3000
    environment:
      - GF_FEATURE_TOGGLES_ENABLE=flameGraph
      - POSTGRESQL_PROPERTIES_PASSWORD=${POSTGRESQL_PROPERTIES_PASSWORD}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - GITHUB_ACCESSTOKEN=${GITHUB_ACCESSTOKEN}
    expose:
      - 3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    restart: always
    # send logs to syslog
    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:51000"
        tag: "grafana"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--storage.tsdb.retention.size=6GB'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    expose:
      - 9090
    restart: always
    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:51000"
        tag: "prometheus"
  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - 9093:9093
    expose:
      - 9093
    restart: always
    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:51000"
        tag: "alertmanager"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    privileged: true
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /etc:/host/etc:ro
      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      # enable process collector
      - '--collector.processes'
      #  enable systemd collector
      - '--collector.systemd'
    expose:
      - 9100
    ports:
      - 9100:9100
    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:51000"
        tag: "node-exporter"

  inspector:
    image: ubuntu:latest
    command: sleep infinity
    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:51000"
        tag: "inspector"

  # phlare:
  #   image: grafana/phlare:latest
  #   ports:
  #     - 4100:4100
  #   volumes:
  #     - ./phlare/phlare.yml:/etc/phlare/phlare.yml
  #     - phlare_data:/data
  #   command:
  #     - '--config.file=/etc/phlare/phlare.yml'
  #   expose:
  #     - 4100
  #   restart: always
  #   logging:
  #     driver: "syslog"
  #     options:
  #       syslog-address: "udp://localhost:51000"
  #       tag: "phlare"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: monitoring_cadvisor
    privileged: true
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    expose:
      - 8080
    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:51000"
        tag: "cadvisor"

  nginx:
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    expose:
      - 80
    restart: unless-stopped
    networks:
      - elk
      - default
    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:51000"
        tag: "nginx"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:51000"
        tag: "zookeeper"

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,PLAINTEXT_BROKER://broker:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_BROKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:51000"
        tag: "broker"
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8095:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker:9092
    depends_on:
      - broker
    logging:
      driver: "syslog"
      options:
        syslog-address: "udp://localhost:51000"
        tag: "kafka-ui"
