/*
 * Socialapp
 *
 * Socialapp is a generic social network.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)



// CommentApiRouter defines the required methods for binding the api requests to a responses for the CommentApi
// The CommentApiRouter implementation should parse necessary information from the http request,
// pass the data to a CommentApiServicer to perform the required actions, then write the service results to the http response.
type CommentApiRouter interface { 
	CreateComment(http.ResponseWriter, *http.Request)
	GetComment(http.ResponseWriter, *http.Request)
	GetUserComments(http.ResponseWriter, *http.Request)
}
// UserApiRouter defines the required methods for binding the api requests to a responses for the UserApi
// The UserApiRouter implementation should parse necessary information from the http request,
// pass the data to a UserApiServicer to perform the required actions, then write the service results to the http response.
type UserApiRouter interface { 
	CreateUser(http.ResponseWriter, *http.Request)
	DeleteUser(http.ResponseWriter, *http.Request)
	GetUserByUsername(http.ResponseWriter, *http.Request)
	GetUserComments(http.ResponseWriter, *http.Request)
	ListUsers(http.ResponseWriter, *http.Request)
	UpdateUser(http.ResponseWriter, *http.Request)
}


// CommentApiServicer defines the api actions for the CommentApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type CommentApiServicer interface { 
	CreateComment(context.Context, string, Comment) (ImplResponse, error)
	GetComment(context.Context, int32) (ImplResponse, error)
	GetUserComments(context.Context, string) (ImplResponse, error)
}


// UserApiServicer defines the api actions for the UserApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UserApiServicer interface { 
	CreateUser(context.Context, User) (ImplResponse, error)
	DeleteUser(context.Context, string) (ImplResponse, error)
	GetUserByUsername(context.Context, string) (ImplResponse, error)
	GetUserComments(context.Context, string) (ImplResponse, error)
	ListUsers(context.Context) (ImplResponse, error)
	UpdateUser(context.Context, string) (ImplResponse, error)
}
