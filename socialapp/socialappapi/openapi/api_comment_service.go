/*
 * Socialapp
 *
 * Socialapp is a generic social network.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// CommentApiService is a service that implements the logic for the CommentApiServicer
// This service should implement the business logic for every endpoint for the CommentApi API.
// Include any external packages or services that will be required by this service.
type CommentApiService struct {
}

// NewCommentApiService creates a default api service
func NewCommentApiService() CommentApiServicer {
	return &CommentApiService{}
}

// CreateComment - Create a new comment
func (s *CommentApiService) CreateComment(ctx context.Context, comment Comment) (ImplResponse, error) {
	// TODO - update CreateComment with the required logic for this service method.
	// Add api_comment_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Comment{}) or use other options such as http.Ok ...
	//return Response(200, Comment{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateComment method not implemented")
}

// GetComment - Returns details about a particular comment
func (s *CommentApiService) GetComment(ctx context.Context, id int32) (ImplResponse, error) {
	// TODO - update GetComment with the required logic for this service method.
	// Add api_comment_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Comment{}) or use other options such as http.Ok ...
	//return Response(200, Comment{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetComment method not implemented")
}

// GetUserComments - Gets all comments for a user
func (s *CommentApiService) GetUserComments(ctx context.Context, username string) (ImplResponse, error) {
	// TODO - update GetUserComments with the required logic for this service method.
	// Add api_comment_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Comment{}) or use other options such as http.Ok ...
	//return Response(200, []Comment{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUserComments method not implemented")
}

// GetUserFeed - Returns a users feed
func (s *CommentApiService) GetUserFeed(ctx context.Context, username string) (ImplResponse, error) {
	// TODO - update GetUserFeed with the required logic for this service method.
	// Add api_comment_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Comment{}) or use other options such as http.Ok ...
	//return Response(200, []Comment{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUserFeed method not implemented")
}
