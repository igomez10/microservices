/*
 * Socialapp
 *
 * Socialapp is a generic social network.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type CreateUserRequest struct {
	Id int64 `json:"id,omitempty"`

	Username string `json:"username"`

	Password string `json:"password"`

	FirstName string `json:"first_name"`

	LastName string `json:"last_name"`

	Email string `json:"email"`

	CreatedAt time.Time `json:"created_at,omitempty"`
}

// AssertCreateUserRequestRequired checks if the required fields are not zero-ed
func AssertCreateUserRequestRequired(obj CreateUserRequest) error {
	elements := map[string]interface{}{
		"username":   obj.Username,
		"password":   obj.Password,
		"first_name": obj.FirstName,
		"last_name":  obj.LastName,
		"email":      obj.Email,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseCreateUserRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of CreateUserRequest (e.g. [][]CreateUserRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCreateUserRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aCreateUserRequest, ok := obj.(CreateUserRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCreateUserRequestRequired(aCreateUserRequest)
	})
}
