/*
 * Socialapp
 *
 * Socialapp is a generic social network.
 *
 * API version: 1.0.0
 * Contact: ignacio.gomez.arboleda@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type Role struct {
	Id int64 `json:"id,omitempty"`

	Name string `json:"name"`

	Description string `json:"description,omitempty"`

	CreatedAt time.Time `json:"created_at,omitempty"`

	Scopes []Scope `json:"scopes,omitempty"`
}

// AssertRoleRequired checks if the required fields are not zero-ed
func AssertRoleRequired(obj Role) error {
	elements := map[string]interface{}{
		"name": obj.Name,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Scopes {
		if err := AssertScopeRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertRecurseRoleRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Role (e.g. [][]Role), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRoleRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRole, ok := obj.(Role)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRoleRequired(aRole)
	})
}
