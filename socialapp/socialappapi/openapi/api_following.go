/*
 * Socialapp
 *
 * Socialapp is a generic social network.
 *
 * API version: 1.0.0
 * Contact: ignacio.gomez.arboleda@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"

	"github.com/go-chi/chi/v5"
)

// FollowingAPIController binds http requests to an api service and writes the service results to the http response
type FollowingAPIController struct {
	service      FollowingAPIServicer
	errorHandler ErrorHandler
}

// FollowingAPIOption for how the controller is set up.
type FollowingAPIOption func(*FollowingAPIController)

// WithFollowingAPIErrorHandler inject ErrorHandler into controller
func WithFollowingAPIErrorHandler(h ErrorHandler) FollowingAPIOption {
	return func(c *FollowingAPIController) {
		c.errorHandler = h
	}
}

// NewFollowingAPIController creates a default api controller
func NewFollowingAPIController(s FollowingAPIServicer, opts ...FollowingAPIOption) Router {
	controller := &FollowingAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the FollowingAPIController
func (c *FollowingAPIController) Routes() Routes {
	return Routes{
		"GetUserFollowers": Route{
			strings.ToUpper("Get"),
			"/v1/users/{username}/followers",
			c.GetUserFollowers,
		},
	}
}

// GetUserFollowers - Get all followers for a user
func (c *FollowingAPIController) GetUserFollowers(w http.ResponseWriter, r *http.Request) {
	usernameParam := chi.URLParam(r, "username")
	result, err := c.service.GetUserFollowers(r.Context(), usernameParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, result.Headers, w)
}
