/*
 * Socialapp
 *
 * Socialapp is a generic social network.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type Comment struct {
	Id int64 `json:"id,omitempty"`

	Content string `json:"content"`

	LikeCount int64 `json:"like_count,omitempty"`

	CreatedAt time.Time `json:"created_at,omitempty"`

	Username string `json:"username"`
}

// AssertCommentRequired checks if the required fields are not zero-ed
func AssertCommentRequired(obj Comment) error {
	elements := map[string]interface{}{
		"content":  obj.Content,
		"username": obj.Username,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseCommentRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Comment (e.g. [][]Comment), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseCommentRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aComment, ok := obj.(Comment)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertCommentRequired(aComment)
	})
}
