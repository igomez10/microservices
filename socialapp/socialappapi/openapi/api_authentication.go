/*
 * Socialapp
 *
 * Socialapp is a generic social network.
 *
 * API version: 1.0.0
 * Contact: ignacio.gomez.arboleda@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
	"strings"
)

// AuthenticationAPIController binds http requests to an api service and writes the service results to the http response
type AuthenticationAPIController struct {
	service      AuthenticationAPIServicer
	errorHandler ErrorHandler
}

// AuthenticationAPIOption for how the controller is set up.
type AuthenticationAPIOption func(*AuthenticationAPIController)

// WithAuthenticationAPIErrorHandler inject ErrorHandler into controller
func WithAuthenticationAPIErrorHandler(h ErrorHandler) AuthenticationAPIOption {
	return func(c *AuthenticationAPIController) {
		c.errorHandler = h
	}
}

// NewAuthenticationAPIController creates a default api controller
func NewAuthenticationAPIController(s AuthenticationAPIServicer, opts ...AuthenticationAPIOption) Router {
	controller := &AuthenticationAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the AuthenticationAPIController
func (c *AuthenticationAPIController) Routes() Routes {
	return Routes{
		"GetAccessToken": Route{
			strings.ToUpper("Post"),
			"/v1/oauth/token",
			c.GetAccessToken,
		},
	}
}

// GetAccessToken - Get an access token
func (c *AuthenticationAPIController) GetAccessToken(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetAccessToken(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, result.Headers, w)
}
