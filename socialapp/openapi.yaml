openapi: 3.0.0
info:
  version: "1.0.0"
  title: "Socialapp"
  license:
    name: MIT
  description: Socialapp is a generic social network.
servers:
  - url: http://localhost:8080
  - url: http://localhost:8085

paths:
  /users:
    get:
      summary: "Returns all the users"
      operationId: listUsers
      tags:
        - User
      responses:
        "200":
          description: Details about a user by ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new user
      operationId: createUser
      tags:
        - User
      requestBody:
        description: Create a new user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: User was created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/{username}/comments:
    get:
      summary: "Gets all comments for a user"
      operationId: getUserComments
      tags:
        - User
        - Comment
      parameters:
        - name: username
          in: path
          description: username of the user
          required: true
          schema:
            type: string
          example: "johndoe"
      responses:
        "200":
          description: User comments
          content:
            application/json:
              schema:
                type: array
                $ref: "#/components/schemas/Comment"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /users/{username}:
    delete:
      summary: Deletes a particular user
      operationId: deleteUser
      tags:
        - User
      parameters:
        - name: username
          in: path
          description: username of the user
          required: true
          schema:
            type: string
          example: "johndoe"
      responses:
        "200":
          description: User was deleted succesfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get a particular user by username
      operationId: getUserByUsername
      tags:
        - User
      parameters:
        - name: username
          in: path
          description: username of the user
          required: true
          schema:
            type: string
          example: "johndoe"
      responses:
        "200":
          description: Details about a user by ID
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a user
      operationId: updateUser
      tags:
        - User
      parameters:
        - name: username
          in: path
          description: username of the user
          required: true
          schema:
            type: string
          example: "johndoe"
      requestBody:
        description: Update a user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User was updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /comments/{id}:
    get:
      summary: Returns details about a particular comment
      operationId: getComment
      tags:
        - Comment
      parameters:
        - name: id
          in: path
          description: ID of the comment
          required: true
          schema:
            type: integer
            format: int32
          example: 123
      responses:
        "200":
          description: Details about a comment by ID
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /comments:
    post:
      summary: Create a new comment
      operationId: createComment
      tags:
        - Comment
      requestBody:
        description: Create a new comment
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Comment"
        required: true
      responses:
        "200":
          description: New comment was created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Comment"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    User:
      type: object
      required:
        - username
        - first_name
        - last_name
        - email
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time

    Comment:
      type: object
      required:
        - content
        - username
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
        like_count:
          type: integer
          format: int64
        created_at:
          type: string
          format: date-time
        username:
          type: string
        deleted_at:
          type: string
          format: date-time

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []
