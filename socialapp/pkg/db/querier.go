// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0

package db

import (
	"context"
	"database/sql"
)

type Querier interface {
	CreateComment(ctx context.Context, db DBTX, arg CreateCommentParams) (Comment, error)
	CreateCommentForUser(ctx context.Context, db DBTX, arg CreateCommentForUserParams) (Comment, error)
	CreateCredential(ctx context.Context, db DBTX, arg CreateCredentialParams) (Credential, error)
	CreateRole(ctx context.Context, db DBTX, arg CreateRoleParams) (Role, error)
	CreateRoleScope(ctx context.Context, db DBTX, arg CreateRoleScopeParams) (RolesToScope, error)
	CreateScope(ctx context.Context, db DBTX, arg CreateScopeParams) (Scope, error)
	CreateToken(ctx context.Context, db DBTX, arg CreateTokenParams) (Token, error)
	CreateTokenToScope(ctx context.Context, db DBTX, arg CreateTokenToScopeParams) (TokensToScope, error)
	CreateURL(ctx context.Context, db DBTX, arg CreateURLParams) (Url, error)
	CreateUser(ctx context.Context, db DBTX, arg CreateUserParams) (User, error)
	CreateUserToRole(ctx context.Context, db DBTX, arg CreateUserToRoleParams) (UsersToRole, error)
	DeleteAllTokensForUser(ctx context.Context, db DBTX, userID int64) error
	DeleteComment(ctx context.Context, db DBTX, id int64) error
	DeleteCredential(ctx context.Context, db DBTX, id int64) error
	DeleteRole(ctx context.Context, db DBTX, id int64) error
	DeleteRoleScope(ctx context.Context, db DBTX, arg DeleteRoleScopeParams) error
	DeleteScope(ctx context.Context, db DBTX, id int64) error
	DeleteToken(ctx context.Context, db DBTX, token string) error
	DeleteURL(ctx context.Context, db DBTX, alias string) error
	DeleteUser(ctx context.Context, db DBTX, id int64) error
	DeleteUserByUsername(ctx context.Context, db DBTX, username string) error
	DeleteUserToRole(ctx context.Context, db DBTX, arg DeleteUserToRoleParams) error
	FollowUser(ctx context.Context, db DBTX, arg FollowUserParams) error
	GetComment(ctx context.Context, db DBTX, id int64) (Comment, error)
	GetCredential(ctx context.Context, db DBTX, publicKey string) (Credential, error)
	GetFollowedUsers(ctx context.Context, db DBTX, followerID int64) ([]User, error)
	GetFollowers(ctx context.Context, db DBTX, followedID int64) ([]User, error)
	GetRole(ctx context.Context, db DBTX, id int64) (Role, error)
	GetRoleByName(ctx context.Context, db DBTX, name string) (Role, error)
	GetScope(ctx context.Context, db DBTX, id int64) (Scope, error)
	GetScopeByName(ctx context.Context, db DBTX, name string) (Scope, error)
	GetToken(ctx context.Context, db DBTX, token string) (Token, error)
	GetTokenScopes(ctx context.Context, db DBTX, id int64) ([]Scope, error)
	// SHORTLY
	GetURLFromAlias(ctx context.Context, db DBTX, alias string) (Url, error)
	GetUserByEmail(ctx context.Context, db DBTX, email string) (User, error)
	GetUserByID(ctx context.Context, db DBTX, id int64) (User, error)
	GetUserByUsername(ctx context.Context, db DBTX, username string) (User, error)
	GetUserComments(ctx context.Context, db DBTX, arg GetUserCommentsParams) ([]Comment, error)
	GetUserRoles(ctx context.Context, db DBTX, id int64) ([]Role, error)
	ListComment(ctx context.Context, db DBTX, arg ListCommentParams) ([]Comment, error)
	ListRoleScopes(ctx context.Context, db DBTX, arg ListRoleScopesParams) ([]Scope, error)
	ListRoles(ctx context.Context, db DBTX, arg ListRolesParams) ([]Role, error)
	ListScopes(ctx context.Context, db DBTX, arg ListScopesParams) ([]Scope, error)
	ListUsers(ctx context.Context, db DBTX, arg ListUsersParams) ([]User, error)
	UnfollowUser(ctx context.Context, db DBTX, arg UnfollowUserParams) error
	UpdateRole(ctx context.Context, db DBTX, arg UpdateRoleParams) error
	UpdateScope(ctx context.Context, db DBTX, arg UpdateScopeParams) (sql.Result, error)
	UpdateUser(ctx context.Context, db DBTX, arg UpdateUserParams) error
	UpdateUserByUsername(ctx context.Context, db DBTX, arg UpdateUserByUsernameParams) error
}

var _ Querier = (*Queries)(nil)
